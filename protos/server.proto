// Proto definitions for shared helper structures.
// file: status.proto
// author: Nikolay Valev
// date: 04/18/2022

syntax = "proto3";
// correct!
import "protos/helperstructs.proto";
//
import "protos/devices.proto";

package squire.proto;

service SquireService {
  // UNPROTECTED.
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

  // UNPROTECTED.
  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse);

  // AUTH_PROTECTED.
  rpc RegisterDevice(RegisterDeviceRequest) returns (RegisterDeviceResponse);

  // AUTH_DEV_PROTECTED.
  /*rpc UpdateDeviceState(UpdateDeviceStateRequest)
      returns (UpdateDeviceStateResponse);
  */
  // AUTH_PROTECTED.
  rpc GetAllDevices(Empty) returns (GetAllDevicesResponse);
}
// Unprotected RPCs.
message RegisterUserRequest {
  // All values self-explanatory.
  string username = 1;
  string password = 2;
  string full_name = 3;
  string email = 4;
}
message RegisterUserResponse {
  // The authentication token to use when making protected calls.
  string authtoken = 2;
  // The lifetime in seconds of the authentication token.
  int64 lifetime = 3;
  // TODO(simeondorelov): Pass back a client certificate?
}
message AuthenticateRequest {
  // All values self-explanatory.
  string username = 1;
  string password = 2;
}
message AuthenticateResponse {
  // The authentication token to use when making protected calls.
  string authtoken = 2;
  // The lifetime in seconds of the authentication token.
  int64 lifetime = 3;
}
// Protected RPCs.
message RegisterDeviceRequest {
  // The human readable name of the device.
  string human_friendly_name = 1;
  // The latest network configuration active on the device.
  NetworkConfig network_config = 2;
  // The hardware and software capabilities of the device.
  DeviceCapabilities device_capabilities = 3;
}
message RegisterDeviceResponse {
  // The newly-assigned global unique identifier of the client device in the
  // system.
  string device_textid = 2;
}
message GetAllDevicesResponse {
  // A list of the client's devices.
  repeated Device devices = 1;
}